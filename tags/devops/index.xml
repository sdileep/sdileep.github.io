<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Devops - Tag - dileep.dev</title><link>https://sdileep.github.io/tags/devops/</link><description>Devops - Tag - dileep.dev</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 02 Jan 2020 15:52:40 +0800</lastBuildDate><atom:link href="https://sdileep.github.io/tags/devops/" rel="self" type="application/rss+xml"/><item><title>Maintain multi-environment, multi-region infrastructure on AWS using Terraform</title><link>https://sdileep.github.io/terraform-setup-multi-environment-region/</link><pubDate>Thu, 02 Jan 2020 15:52:40 +0800</pubDate><author>Author</author><guid>https://sdileep.github.io/terraform-setup-multi-environment-region/</guid><description><![CDATA[In one of my recent engagements, I had to work out an approach to manage AWS infrastructure across multiple regions, and for various environments, using Terraform.
As any sane copy-paste-tweak developer would, I did &ldquo;google&rdquo; for inspiration but ended up finding content that solved partially, either only for multi-environment or multi-region scenarios, or wasn&rsquo;t thought through (for example, no isolation of state between regions). For anyone in a similar need, here&rsquo;s something to build upon.]]></description></item></channel></rss>